name: Update Release with Plugin ZIP

on:
  pull_request:
    types:
      - closed
    branches:
      - master

jobs:
  build-and-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run grunt archive command
        run: grunt build-archive

      - name: Get version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.current-version }}
          release_name: Release ${{ steps.package-version.outputs.current-version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rsvp-${{ steps.package-version.outputs.current-version }}.zip
          asset_name: rsvp-${{ steps.package-version.outputs.current-version }}.zip
          asset_content_type: application/zip
      - name: Get changelog
        id: changelog
        shell: bash
        run: |
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            version=$(echo "${{ github.ref_name }}" | sed 's/^v//')
             awk -v ver="$version" '
             BEGIN {latest_ver = "0.0.0"}
             /^= / {
               split($2, a, "-");
               if (a[1] <= ver && a[1] > latest_ver) {
                 latest_ver = a[1];
                 p = 1;
                 print "Latest version: " latest_ver;
                 print "Changelog:";
                 print;
                 next;
               }
               if (p) exit;
             }
             p
             ' changelog.txt >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
      - name: Notify on Slack
        uses: bloodyowl/slack-message-release-action@v1.1.5
        with:
            version: ${{ steps.package-version.outputs.current-version }}
            changelog: ${{ steps.changelog.outputs.changelog }}
            slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}